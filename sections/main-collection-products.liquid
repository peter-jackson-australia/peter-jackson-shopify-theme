{% comment %}
  Collection Products - Fixed Version
{% endcomment %}

<script src="{{ 'ajaxinate.min.js' | asset_url }}" defer></script>

<style>
  /* Main Collection Products Section */

  .main-collection-products {
    width: 100%;
    padding: 0;
    margin: 0;
  }

  /* Collection Header */
  .collection-header {
    padding: var(--space-xl) var(--space-m) var(--space-l);
    text-align: center;
    border-bottom: 1px solid var(--neutral-200);
  }

  .collection-header__title {
    margin-bottom: var(--space-s);
  }

  .collection-header__description {
    max-width: 60ch;
    margin: 0 auto;
    color: var(--neutral-600);
  }

  /* Collection Controls (Filtering Bar) */
  .collection-controls {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-m);
    background: var(--white);
    border-bottom: 1px solid var(--neutral-200);
    position: relative;
    z-index: 100;
  }

  .collection-controls.controls-fixed {
    position: fixed;
    top: var(--space-xl);
    left: 0;
    right: 0;
    z-index: 9995;
    border-bottom: 1px solid var(--neutral-200);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .collection-controls.sliding-up {
    transform: translateY(-100%);
    transition: transform 0.3s ease;
  }

  #controls-spacer {
    height: var(--space-xl);
  }

  /* Controls Left Side */
  .collection-controls__left {
    display: flex;
    align-items: center;
    gap: var(--space-m);
  }

  .collection-controls__filter-toggle {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    background: none;
    border: 1px solid var(--neutral-200);
    padding: var(--space-xs) var(--space-s);
    cursor: pointer;
    color: var(--neutral-950);
    text-transform: uppercase;
    font-family: 'Ordinary Light';
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
  }

  .collection-controls__filter-toggle:hover {
    border-color: var(--neutral-400);
  }

  .collection-controls__active-filters {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    flex-wrap: wrap;
  }

  .active-filter-tag {
    display: flex;
    align-items: center;
    gap: var(--space-3xs);
    background: var(--neutral-100);
    border: 1px solid var(--neutral-200);
    padding: var(--space-3xs) var(--space-xs);
    font-size: clamp(0.5787rem, 0.5498rem + 0.1447vw, 0.7234rem);
    color: var(--neutral-700);
  }

  .active-filter-tag__remove {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    width: 12px;
    height: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--neutral-500);
  }

  .active-filter-tag__remove:hover {
    color: var(--neutral-950);
  }

  /* Controls Right Side */
  .collection-controls__right {
    display: flex;
    align-items: center;
    gap: var(--space-m);
  }

  .collection-controls__sort {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .collection-controls__sort-label {
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
    color: var(--neutral-600);
    text-transform: uppercase;
  }

  .collection-controls__sort-select {
    background: none;
    border: 1px solid var(--neutral-200);
    padding: var(--space-xs) var(--space-s);
    color: var(--neutral-950);
    cursor: pointer;
    font-family: 'Ordinary Light';
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
  }

  .collection-controls__results-count {
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
    color: var(--neutral-600);
    white-space: nowrap;
  }

  /* Collection Content Container */
  .collection-content {
    display: flex;
    position: relative;
  }

  /* Products Grid */
  .products-grid {
    flex: 1;
    padding: var(--space-m);
  }

  .products-grid__container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: var(--space-l);
    width: 100%;
  }

  /* Product Card */
  .product-card {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
    position: relative;
    background: var(--white);
  }

  .product-card:hover .product-card__image img {
    transform: scale(1.02);
  }

  .product-card__image {
    position: relative;
    overflow: hidden;
    aspect-ratio: 3/4;
    margin-bottom: var(--space-xs);
  }

  .product-card__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card__badge {
    position: absolute;
    top: var(--space-xs);
    left: var(--space-xs);
    background: var(--white);
    color: var(--neutral-950);
    padding: var(--space-3xs) var(--space-xs);
    font-size: clamp(0.5787rem, 0.5498rem + 0.1447vw, 0.7234rem);
    text-transform: uppercase;
    letter-spacing: 0.065rem;
  }

  .product-card__content {
    display: flex;
    flex-direction: column;
    gap: var(--space-3xs);
  }

  .product-card__title {
    color: var(--neutral-950);
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
    text-transform: uppercase;
    letter-spacing: 0.065rem;
  }

  .product-card__price {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .product-card__price-current {
    color: var(--neutral-950);
    font-weight: 500;
  }

  .product-card__price-compare {
    color: var(--neutral-400);
    text-decoration: line-through;
    font-size: clamp(0.5787rem, 0.5498rem + 0.1447vw, 0.7234rem);
  }

  .product-card__colors {
    display: flex;
    gap: var(--space-3xs);
    margin-top: var(--space-3xs);
  }

  .product-card__color {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 1px solid var(--neutral-200);
  }

  /* Pagination */
  .collection-pagination {
    padding: var(--space-xl) var(--space-m);
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-s);
  }

  .pagination__list {
    display: flex;
    list-style: none;
    gap: var(--space-xs);
    align-items: center;
  }

  .pagination__item {
    display: flex;
  }

  .pagination__link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: 1px solid var(--neutral-200);
    color: var(--neutral-950);
    text-decoration: none;
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
  }

  .pagination__link:hover,
  .pagination__link.is-active {
    background: var(--neutral-950);
    color: var(--white);
    border-color: var(--neutral-950);
  }

  .pagination__link--prev,
  .pagination__link--next {
    width: auto;
    padding: 0 var(--space-s);
    text-transform: uppercase;
    letter-spacing: 0.065rem;
  }

  /* Loading States */
  .collection-loading {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: var(--space-xl);
  }

  .collection-loading .loader--spinner {
    width: 24px;
    height: 24px;
    border: 2px solid var(--neutral-200);
    border-bottom-color: var(--neutral-950);
  }

  /* Empty State */
  .collection-empty {
    padding: var(--space-3xl) var(--space-m);
    text-align: center;
    color: var(--neutral-600);
  }

  .collection-empty__title {
    margin-bottom: var(--space-s);
    color: var(--neutral-950);
  }

  .collection-empty__message {
    margin-bottom: var(--space-l);
  }

  .collection-empty__button {
    display: inline-block;
    padding: var(--space-s) var(--space-l);
    background: var(--neutral-950);
    color: var(--white);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.065rem;
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
  }

  /* Responsive Design */
  @media screen and (max-width: 1200px) {
    .products-grid__container {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: var(--space-m);
    }
  }

  @media screen and (max-width: 768px) {
    .collection-controls {
      flex-direction: column;
      gap: var(--space-s);
      align-items: stretch;
    }

    .collection-controls__left,
    .collection-controls__right {
      justify-content: space-between;
      width: 100%;
    }

    .collection-controls__right {
      flex-direction: row-reverse;
    }

    .products-grid {
      padding: var(--space-s);
    }

    .products-grid__container {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
      gap: var(--space-s);
    }

    .collection-header {
      padding: var(--space-l) var(--space-s);
    }

    .collection-pagination {
      padding: var(--space-l) var(--space-s);
    }

    .pagination__link {
      width: 36px;
      height: 36px;
    }
  }

  @media screen and (max-width: 480px) {
    .products-grid__container {
      grid-template-columns: repeat(2, 1fr);
    }

    .collection-controls__active-filters {
      width: 100%;
      order: 3;
    }

    .collection-controls__filter-toggle {
      flex: 1;
      justify-content: center;
    }

    .collection-controls__sort {
      flex-direction: column;
      align-items: flex-end;
    }

    .collection-controls__sort-label {
      display: none;
    }
  }
</style>

<div
  id="{{ section.id }}"
  class="section-wrap"
  x-data="
    {
      expandedGrid: true,
      isFilterOpen: false
    }
  "
  x-init="
    document.addEventListener('menu-open', () => {
      isFilterOpen = false;
      document.body.classList.remove('filter-open');
    });
    window.closeFilter = () => {
      document.querySelector('.filter-sidebar').classList.add('closing');
      setTimeout(() => {
        isFilterOpen = false;
        document.body.classList.remove('filter-open');
        document.querySelector('.filter-sidebar').classList.remove('closing');
      }, 300);
    };
  "
>
  <div id="collection" class="section">
    <div x-show="isFilterOpen" x-cloak>
      <div
        class="filter-sidebar__overlay"
        @click="
          document.querySelector('.filter-sidebar').classList.add('closing');
          setTimeout(() => {
            isFilterOpen = false;
            document.body.classList.remove('filter-open');
            document.querySelector('.filter-sidebar').classList.remove('closing');
          }, 300)
        "
      ></div>
      <aside class="filter-sidebar">
        <div class="filter-sidebar-header">
          <h3 class="heading--xl">Filters</h3>
          <p>
            <a class="body" href="{{ collection.url }}?sort_by={{ collection.sort_by }}">Clear all</a>
          </p>
          <button
            class="filter-close-btn"
            @click="
              document.querySelector('.filter-sidebar').classList.add('closing');
              setTimeout(() => {
                isFilterOpen = false;
                document.body.classList.remove('filter-open');
                document.querySelector('.filter-sidebar').classList.remove('closing');
              }, 300)
            "
            aria-label="Close filters"
          >
            {% render 'icon-close' %}
          </button>
        </div>
        {% render 'collection-filters' %}
      </aside>
    </div>
    {% liquid
      assign has_grid_content = false

      if collection.metafields.custom.collection_grid_content != blank
        assign has_grid_content = true
        for filter in collection.filters
          for active_filter in filter.active_values
            assign has_grid_content = false
            break
          endfor
          if has_grid_content == false
            break
          endif
        endfor

        if has_grid_content
          assign metaobject_raw = collection.metafields.custom.collection_grid_content.value
        endif
      endif

      assign original_limit = section.settings.limit | plus: 0

      assign grid_position = 3
      if has_grid_content and metaobject_raw.grid_position != blank
        assign grid_position = metaobject_raw.grid_position | plus: 0
      endif

      assign actual_position = grid_position

      if grid_position > original_limit
        assign actual_position = original_limit
      endif

      if actual_position < 1
        assign actual_position = 1
      endif

      assign is_even = actual_position | modulo: 2
      if is_even == 0
        assign actual_position = actual_position | minus: 1
        if actual_position < 1
          assign actual_position = 1
        endif
      endif
    %}
    {% paginate collection.products by original_limit %}
      <div>
        <div class="section">
          <div class="collection-controls">
            <button
              class="collection-controls__filter-button body"
              @click="isFilterOpen = !isFilterOpen; document.body.classList.toggle('filter-open', isFilterOpen)"
            >
              Filters
              <span>{% render 'icon-filter' %}</span>
            </button>

            <p class="body">
              {{ collection.products_count }}
              {% if collection.products_count == 1 %}Product{% else %}Products{% endif %}
            </p>

            <div class="collection-controls__actions">
              <button
                aria-label="Change the grid view"
                class="btn grid-toggle-btn"
                @click="expandedGrid = !expandedGrid"
                x-data="{ isMobile: window.innerWidth < 768 }"
                x-init="
                  window.addEventListener('resize', () => {
                    isMobile = window.innerWidth < 768;
                  })
                "
              >
                <span x-cloak x-show="!isMobile && expandedGrid">{% render 'icon-grid-2' %}</span>
                <span x-cloak x-show="!isMobile && !expandedGrid">{% render 'icon-grid-4' %}</span>

                <span x-cloak x-show="isMobile && expandedGrid">{% render 'icon-grid-1' %}</span>
                <span x-cloak x-show="isMobile && !expandedGrid">{% render 'icon-grid-2' %}</span>
              </button>
            </div>
          </div>

          <div
            id="AjaxinateContainer"
            class="products-grid animate-container-cards-scroll"
            :class="
              {
                'products-grid--cols-2': !expandedGrid,
                'products-grid--cols-4': expandedGrid
              }
            "
          >
            {% if collection.products.size == 0 %}
              <div class="no-products-message">
                <p class="heading--l" style="color: var(--neutral-950)">Sorry, there are no products to show</p>
                <p class="body">
                  Try adjusting your filters or
                  <a href="/" style="color: var(--neutral-950)">return home</a>
                </p>
              </div>
            {% else %}
              {% assign inserted = false %}
              {% for product in collection.products %}
                {% assign current_position = forloop.index %}

                {% if current_position == actual_position
                  and inserted == false
                  and paginate.current_page == 1
                  and has_grid_content
                %}
                  <div class="grid-content">
                    {% if metaobject_raw.image_or_video != blank %}
                      {% if metaobject_raw.image_or_video.value.media_type == 'video' %}
                        <div class="grid-content__background grid-content__background--video">
                          <video autoplay muted loop playsinline>
                            <source src="{{ metaobject_raw.image_or_video | file_url }}" type="video/mp4">
                          </video>
                        </div>
                      {% else %}
                        <div
                          class="grid-content__background grid-content__background--image"
                          style="background-image: url('{{ metaobject_raw.image_or_video | image_url: width: 1200 }}');"
                        ></div>
                      {% endif %}
                    {% endif %}

                    <div class="grid-content__container grid-content__container--left">
                      {% if metaobject_raw.leading_text != blank %}
                        <p class="heading--l grid-content__leading-text">{{ metaobject_raw.leading_text }}</p>
                      {% endif %}

                      <h2 class="heading--2xl grid-content__header">{{ metaobject_raw.header }}</h2>

                      <div class="body grid-content__description">{{ metaobject_raw.description }}</div>

                      {% if metaobject_raw.link != blank %}
                        {{
                          metaobject_raw.link
                          | metafield_tag
                          | replace: 'class="', 'class="button button--white body'
                        }}
                      {% endif %}
                    </div>
                  </div>
                  {% assign inserted = true %}
                {% endif %}

                {% render 'product-card',
                  product: product,
                  image_width: 520,
                  prominent_discount_mobile: section.settings.prominent_discount_mobile
                %}
              {% endfor %}

              {% if inserted == false and paginate.current_page == 1 and has_grid_content %}
                <div class="grid-content">
                  {% if metaobject_raw.image_or_video != blank %}
                    {% if metaobject_raw.image_or_video.value.media_type == 'video' %}
                      <div class="grid-content__background grid-content__background--video">
                        <video autoplay muted loop playsinline>
                          <source src="{{ metaobject_raw.image_or_video | file_url }}" type="video/mp4">
                        </video>
                      </div>
                    {% else %}
                      <div
                        class="grid-content__background grid-content__background--image"
                        style="background-image: url('{{ metaobject_raw.image_or_video | image_url: width: 1200 }}');"
                      ></div>
                    {% endif %}
                  {% endif %}

                  <div class="grid-content__container grid-content__container--left">
                    {% if metaobject_raw.leading_text != blank %}
                      <p class="heading--l grid-content__leading_text">{{ metaobject_raw.leading_text }}</p>
                    {% endif %}

                    <h2 class="heading--2xl grid-content__header">{{ metaobject_raw.header }}</h2>

                    <div class="body grid-content__description">{{ metaobject_raw.description }}</div>

                    {% if metaobject_raw.link != blank %}
                      {{ metaobject_raw.link | metafield_tag | replace: 'class="', 'class="button button--white body' }}
                    {% endif %}
                  </div>
                </div>
              {% endif %}
            {% endif %}
          </div>
          <div id="AjaxinatePagination">
            {% if paginate.next %}
              <a aria-label="Loading More" href="{{ paginate.next.url }}"></a>
            {% endif %}
          </div>
        </div>
      </div>
    {% endpaginate %}
  </div>
</div>

{% javascript %}
  window.addEventListener('load', function () {
    var endlessScroll = new Ajaxinate({
      method: 'scroll',
      container: '#AjaxinateContainer',
      pagination: '#AjaxinatePagination',
      offset: '400',
      loadingText:
        '<div style="margin: auto 0; display:flex;justify-content:center;align-items:center;padding:var(--space-m) 0;width:100%;height:1px;overflow:hidden"><svg fill=#E7E7E7 height=1 style=max-width:300px viewBox="0 0 100 1"width=100% xmlns=http://www.w3.org/2000/svg><style>.react{animation:moving 1s ease-in-out infinite;transform-origin:0 50%}@keyframes moving{0%{width:0%}50%{width:100%;transform:translateX(0)}100%{width:0;transform:translateX(100%)}}</style><rect class=react fill=#E7E7E7 height=1 width=100% /></svg></div>',
    });

    document.addEventListener(
      'click',
      function (event) {
        if (event.target.closest('.splide__arrow')) {
          event.preventDefault();
        }
      },
      true
    );

    document.querySelectorAll('[x-data]').forEach((el) => {
      if (el.hasAttribute('x-data') && el.__x) {
        if (el.__x.$data.hasOwnProperty('isMobile')) {
          el.__x.$data.isMobile = window.innerWidth < 768;
        }
      }
    });
  });
{% endjavascript %}

{% schema %}
{
  "name": "Products",
  "limit": 1,
  "tag": "section",
  "class": "collection-products-section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Display current collection's products."
    },
    {
      "type": "range",
      "id": "limit",
      "label": "Products",
      "info": "Determines how many products to show before loading more.",
      "min": 4,
      "max": 16,
      "step": 1,
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "prominent_discount_mobile",
      "label": "Show prominent discount codes",
      "info": "Display discount codes as overlay badges on product images",
      "default": false
    }
  ],
  "enabled_on": {
    "templates": ["collection"]
  }
}
{% endschema %}
