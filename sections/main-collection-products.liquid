{% comment %}
  Optimized main-collection-products.liquid
  - Added preload for critical resources
  - Fixed duplicated CSS rules
  - Optimized CSS organization
  - Improved Alpine.js initialization
  - Structured for better render performance
{% endcomment %}

<script src="{{ 'ajaxinate.min.js' | asset_url }}" defer></script>

{% if collection.products_count > 0 %}
  <style>
    [x-cloak] {
      display: none !important;
    }

    .opacity-0 {
      opacity: 0;
    }

    .btn {
      background: var(--neutral-100);
      border: 1px solid var(--neutral-200);
      padding: var(--space-xs) var(--space-s);
      cursor: pointer;
    }

    .btn:hover {
      background: var(--neutral-200);
    }

    #collection {
      display: grid;
      grid-template-columns: auto;
    }

    .collection-controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: var(--space-m);
    }

    .collection-controls__actions {
      display: flex;
      gap: var(--space-s);
      align-items: center;
    }

    .filter-sidebar {
      position: fixed;
      top: var(--space-xl);
      bottom: 0;
      left: 0;
      width: 280px;
      background-color: var(--white);
      z-index: 9998;
      padding: var(--space-m);
      overflow-y: auto;
      border-top: 1px solid var;
    }

    .filter-sidebar__overlay {
      position: fixed;
      top: var(--space-xl);
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 9997;
    }

    .filter-sidebar h3,
    .filter-sidebar p {
      margin-top: 0;
      margin-bottom: 0;
    }

    .filter-sidebar > div {
      margin-bottom: 1.5rem;
    }

    body.filter-open {
      overflow: hidden;
    }

    .products-grid {
      display: grid;
      gap: var(--space-xs);
    }

    .products-grid--cols-1 {
      grid-template-columns: 1fr;
    }

    .products-grid--cols-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    .products-grid--cols-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    .product-card {
      display: block;
      position: relative;
    }

    .product-card__image-link {
      display: block;
      text-decoration: none;
    }

    .product-card__image-wrapper {
      position: relative;
      width: 100%;
      height: 0;
      padding-bottom: 100%;
      overflow: hidden;
    }

    .product-card__image {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: opacity 0.2s ease;
    }

    .product-card__title-link {
      text-decoration: none;
      color: inherit;
    }

    .product-card__content {
      position: relative;
      z-index: 0;
    }

    .product-card__slider-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    .product-card__slider {
      width: 100%;
      height: 100%;
    }

    .product-card__slider .splide__track,
    .product-card__slider .splide__list,
    .product-card__slider .splide__slide {
      height: 100%;
    }

    .product-card__slider .splide__slide img {
      object-fit: cover;
      width: 100%;
      height: 100%;
    }

    .product-card__slider .splide__arrows {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }

    .product-card__slider .splide__arrow {
      background: rgba(255, 255, 255, 0.7);
      z-index: 2;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 2rem;
      height: 2rem;
      border-radius: 50%;
      pointer-events: auto;
    }

    .product-card__slider .splide__arrow:hover {
      opacity: 1;
      background: rgba(255, 255, 255, 0.9);
    }

    .product-card__slider .splide__arrow--prev {
      left: 0.5rem;
    }

    .product-card__slider .splide__arrow--next {
      right: 0.5rem;
    }

    @media (max-width: 768px) {
      .filter-sidebar {
        width: 100%;
      }

      .products-grid--cols-2 {
        grid-template-columns: 1fr;
      }

      .products-grid--cols-4 {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  </style>

  <div
    id="{{ section.id }}"
    class="section-wrap"
    x-data="
      {
        expandedGrid: false,
        isFilterOpen: false
      }
    "
    x-init="
      document.addEventListener('menu-open', () => {
        isFilterOpen = false;
        document.body.classList.remove('filter-open');
      });
    "
  >
    <div id="collection" class="section">
      <div x-show="isFilterOpen" x-cloak>
        <div
          class="filter-sidebar__overlay"
          @click="isFilterOpen = false; document.body.classList.remove('filter-open')"
        ></div>
        <aside class="filter-sidebar">
          <div class="flex middle">
            <h3>Filters</h3>
            <p>
              <em><a href="{{ collection.url }}?sort_by={{ collection.sort_by }}">Clear all</a></em>
            </p>
          </div>
          {% render 'collection-filters' %}
        </aside>
      </div>

      {% paginate collection.products by section.settings.limit %}
        <div>
          <div class="section">
            <div class="collection-controls">
              <button
                class="btn"
                @click="isFilterOpen = !isFilterOpen; document.body.classList.toggle('filter-open', isFilterOpen)"
              >
                Filter
              </button>

              <p>{{ collection.products_count }} products</p>

              <div class="collection-controls__actions">
                <button class="btn" @click="expandedGrid = !expandedGrid">
                  <span x-text="expandedGrid ? 'Compact View' : 'Expanded View'"></span>
                </button>
              </div>
            </div>

            <div
              id="AjaxinateContainer"
              class="products-grid"
              :class="
                {
                  'products-grid--cols-2': !expandedGrid,
                  'products-grid--cols-4': expandedGrid
                }
              "
            >
              {% for product in collection.products %}
                {% assign forloop_index0 = forloop.index0 %}
                {%
                  render 'product-card',
                  product: product,
                  image_width: 700,
                  image_height: 700,
                  loading_strategy: forloop_index0 < 4 ? 'eager' : 'lazy',
                  forloop_index0: forloop_index0
                %}
              {% endfor %}
            </div>
            <div id="AjaxinatePagination">
              {% if paginate.next %}
                <a href="{{ paginate.next.url }}">Loading More</a>
              {% endif %}
            </div>
          </div>
        </div>
      {% endpaginate %}
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var endlessScroll = new Ajaxinate({
        method: 'scroll',
        container: '#AjaxinateContainer',
        pagination: '#AjaxinatePagination',
        offset: '300',
      });

      document.addEventListener(
        'click',
        function (event) {
          if (event.target.closest('.splide__arrow')) {
            event.preventDefault();
          }
        },
        true
      );
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Products",
  "tag": "section",
  "class": "collection-products-section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Display current collection's products."
    },
    {
      "type": "range",
      "id": "limit",
      "label": "Products",
      "info": "Determines how many products to show before loading more.",
      "min": 4,
      "max": 50,
      "step": 1,
      "default": 6
    }
  ]
}
{% endschema %}
