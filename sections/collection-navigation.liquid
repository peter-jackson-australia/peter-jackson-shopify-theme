{%- comment -%}
  Collection Navigation
{%- endcomment -%}

{% stylesheet %}
  .collection-navigation {
    width: 100%;
    padding: var(--space-l) var(--space-m);
  }

  .collection-navigation__container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  .collection-navigation__previous,
  .collection-navigation__next {
    flex: 1;
  }

  .collection-navigation__previous {
    text-align: left;
  }

  .collection-navigation__current {
    flex: 1;
    text-align: center;
    color: var(--neutral-950);
  }

  .collection-navigation__next {
    text-align: right;
  }

  .collection-navigation__label {
    display: block;
    margin-bottom: var(--space-2xs);
  }

  .collection-navigation__link {
    color: var(--neutral-600);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
  }

  .collection-navigation__arrow {
    display: inline-flex;
    align-items: center;
  }

  .collection-navigation__arrow--prev {
    transform: rotate(180deg);
    margin-right: var(--space-xs);
  }

  .collection-navigation__arrow--next {
    margin-left: var(--space-xs);
  }

  @media screen and (max-width: 768px) {
    .collection-navigation__container {
      flex-direction: column;
      gap: var(--space-m);
    }

    .collection-navigation__previous,
    .collection-navigation__current,
    .collection-navigation__next {
      text-align: center;
      width: 100%;
    }
  }
{% endstylesheet %}

{%- liquid
  assign current_handle = collection.handle
  assign prev_collection = null
  assign next_collection = null
  assign non_empty_collection_handles = ''

  for coll in collections
    if coll.products_count > 0
      assign non_empty_collection_handles = non_empty_collection_handles | append: coll.handle | append: ','
    endif
  endfor

  assign non_empty_collection_handles = non_empty_collection_handles | split: ','

  assign current_index = 0
  for handle in non_empty_collection_handles
    if handle == current_handle
      break
    endif
    assign current_index = current_index | plus: 1
  endfor

  assign prev_index = current_index | minus: 1
  assign next_index = current_index | plus: 1

  if prev_index >= 0
    assign prev_handle = non_empty_collection_handles[prev_index]
    assign prev_collection = collections[prev_handle]
  endif

  if next_index < non_empty_collection_handles.size
    assign next_handle = non_empty_collection_handles[next_index]
    assign next_collection = collections[next_handle]
  endif
-%}

<section class="collection-navigation" data-section-type="collection-navigation">
  <div class="collection-navigation__container">
    <div class="collection-navigation__previous">
      {% if prev_collection %}
        <span class="collection-navigation__label body--uppercase">Previous Category</span>
        <a href="{{ prev_collection.url }}" class="collection-navigation__link body--uppercase">
          <span class="collection-navigation__arrow collection-navigation__arrow--prev">
            {% render 'icon-arrow-submit-dark' %}
          </span>
          {{ prev_collection.title }}
        </a>
      {% endif %}
    </div>

    <div class="collection-navigation__current heading--l">
      {{ collection.title }}
    </div>

    <div class="collection-navigation__next">
      {% if next_collection %}
        <span class="collection-navigation__label body--uppercase">Next Category</span>
        <a href="{{ next_collection.url }}" class="collection-navigation__link body--uppercase">
          {{ next_collection.title }}
          <span class="collection-navigation__arrow collection-navigation__arrow--next">
            {% render 'icon-arrow-submit-dark' %}
          </span>
        </a>
      {% endif %}
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Collection Navigation",
  "settings": [],
  "presets": [
    {
      "name": "Collection Navigation",
      "category": "Collection"
    }
  ]
}
{% endschema %}
