{%- comment -%}sections/main-cart.liquid{%- endcomment -%}

<style>
  .cart-drawer-container {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 50;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease;
  }

  .cart-drawer-container.is-active {
    opacity: 1;
    visibility: visible;
  }

  .cart-drawer {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    max-width: 450px;
    background: var(--white);
    padding: var(--space-m);
    z-index: 51;
    transform: translateX(100%);
    transition: transform 0.3s ease;
  }

  .is-active .cart-drawer {
    transform: translateX(0);
  }

  .cart-toggle {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    position: relative;
  }
</style>

<div class="cart-drawer-container">
  <div class="cart-drawer">
    <form action="{{ routes.cart_url }}" method="post" class="main-cart">
      <div data-ajax-cart-section>
        <div class="flex justify-between items-center mb-4">
          <h2 class="heading--l">Cart</h2>
          <button type="button" class="cart-close text-neutral-400 text-xl">&times;</button>
        </div>

        <div class="main-cart__items">
          {% for item in cart.items %}
            {% assign item_index = forloop.index %}
            <div class="border-b border-neutral-200 py-4">
              <div class="mb-2">
                <a href="{{ item.url }}" class="body--bold">{{ item.title }}</a>
              </div>
              <div class="mb-2 body">Price: {{ item.final_price | money }}</div>

              <div class="mb-2">
                <label class="body">Quantity:</label>
                <ajax-cart-quantity class="flex gap-4 items-center mt-1">
                  <a
                    data-ajax-cart-quantity-minus
                    href="{{ routes.cart_change_url }}?line={{ item_index }}&quantity={{ item.quantity | minus: 1 }}"
                    class="body"
                  >
                    -
                  </a>

                  <input
                    data-ajax-cart-quantity-input="{{ item_index }}"
                    name="updates[]"
                    value="{{ item.quantity }}"
                    type="number"
                    class="w-16 text-center border border-neutral-200"
                  >

                  <a
                    data-ajax-cart-quantity-plus
                    href="{{ routes.cart_change_url }}?line={{ item_index }}&quantity={{ item.quantity | plus: 1 }}"
                    class="body"
                  >
                    +
                  </a>
                </ajax-cart-quantity>
              </div>

              <div data-ajax-cart-errors="{{ item.key }}" class="text-red-500"></div>

              <div class="body--bold">Total: {{ item.final_line_price | money }}</div>
            </div>
          {% endfor %}
        </div>

        <button
          type="submit"
          name="checkout"
          class="w-full mt-4 bg-neutral-950 text-white body py-4"
        >
          Checkout â€” {{ cart.total_price | money_with_currency }}
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  class CartDrawer {
    constructor() {
      this.drawer = document.querySelector('.cart-drawer-container');
      this.bindEvents();
    }

    bindEvents() {
      // Cart toggle button
      document.getElementById('cart-toggle')?.addEventListener('click', () => this.toggle());

      // Add to cart button
      document.getElementById('js--addtocart')?.addEventListener('click', () => this.show());

      // Close button and overlay
      document.querySelector('.cart-close')?.addEventListener('click', () => this.hide());
      this.drawer?.addEventListener('click', (e) => {
        if (e.target === this.drawer) this.hide();
      });
    }

    show() {
      this.drawer.classList.add('is-active');
      document.body.style.overflow = 'hidden';
    }

    hide() {
      this.drawer.classList.remove('is-active');
      document.body.style.overflow = '';
    }

    toggle() {
      this.drawer.classList.contains('is-active') ? this.hide() : this.show();
    }
  }

  // Initialize cart drawer when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    new CartDrawer();
  });
</script>

{% schema %}
{
  "name": "Main Cart"
}
{% endschema %}
