<style>
  .countdown-timer {
    position: relative;
    height: calc(100dvh - var(--space-xl) - 35px);
    overflow: hidden;
    color: var(--white);
  }

  .countdown-timer__background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }

  .countdown-timer__container {
    position: absolute;
    width: 100%;
    z-index: 3;
    padding: 0 var(--space-m);
    display: grid;
    gap: var(--space-s);
  }

  .countdown-timer__container--left {
    text-align: left;
    justify-items: start;
  }

  .countdown-timer__container--center {
    text-align: center;
    justify-items: center;
  }

  .countdown-timer__container--right {
    text-align: right;
    justify-items: end;
  }

  .countdown-timer__container--top {
    top: 0;
    padding-top: var(--space-2xl);
  }

  .countdown-timer__container--middle {
    top: 50%;
    transform: translateY(-50%);
    padding-top: 0;
    padding-bottom: 0;
  }

  .countdown-timer__container--bottom {
    bottom: 0;
    padding-bottom: var(--space-2xl);
  }

  .countdown-timer__blocks {
    display: flex;
    gap: var(--space-m);
  }

  .countdown-timer__container--center .countdown-timer__blocks {
    justify-content: center;
  }

  .countdown-timer__container--right .countdown-timer__blocks {
    justify-content: flex-end;
  }

  .countdown-timer__block {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
  }

  .countdown-timer__value {
    display: inline-block;
    width: 100%;
    padding: var(--space-s);
    background-color: transparent;
    border: 1px solid var(--white);
    color: var(--white);
    margin-bottom: var(--space-xs);
    text-align: center;
  }

  .countdown-timer__label {
    color: var(--white);
  }

  .countdown-timer__button-container {
    margin-top: var(--space-m);
  }

  .countdown-timer__final-message,
  .countdown-timer__complete-message {
    display: none;
  }

  @media screen and (max-width: 768px) {
    .countdown-timer__container {
      padding-bottom: var(--space-xl);
      text-align: center;
      justify-items: center;
    }

    .countdown-timer__container--top {
      padding-top: var(--space-xl);
    }

    .countdown-timer__blocks {
      gap: var(--space-s);
      justify-content: flex-start;
    }

    .countdown-timer__block {
      min-width: 60px;
    }

    .countdown-timer__button-container {
      margin-top: var(--space-s);
    }
  }
</style>

<div id="countdown-timer-{{ section.id }}" class="countdown-timer">
  {% if section.settings.background_image %}
    {{
      section.settings.background_image
      | image_url: width: 1440
      | image_tag: class: 'countdown-timer__background', alt: section.settings.background_image.alt
      | default: section.settings.heading,
        loading: 'eager',
        decoding: 'async',
        widths: '400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2400, 3000',
        sizes: '(max-width: 400px) 400px, (max-width: 600px) 600px, (max-width: 800px) 800px, (max-width: 1000px) 1000px, (max-width: 1200px) 1200px, (max-width: 1400px) 1400px, (max-width: 1600px) 1600px, (max-width: 1800px) 1800px, (max-width: 2000px) 2000px, (max-width: 2400px) 2400px, 100vw'
    }}
  {% endif %}

  <div class="countdown-timer__container countdown-timer__container--{{ section.settings.horizontal_alignment | default: 'center' }} countdown-timer__container--{{ section.settings.vertical_alignment | default: 'bottom' }}">
    {% if section.settings.heading != blank %}
      <h1 class="countdown-timer__heading heading--3xl {% if section.settings.heading_animation != 'none' %}{{ section.settings.heading_animation }}{% endif %}">
        {{ section.settings.heading }}
      </h1>
    {% endif %}

    {% if section.settings.subheading != blank %}
      <div class="countdown-timer__subheading heading--l {% if section.settings.subheading_animation != 'none' %}{{ section.settings.subheading_animation }}{% endif %}">
        {{ section.settings.subheading }}
      </div>
    {% endif %}

    <div
      id="countdown-timer-blocks-{{ section.id }}"
      class="countdown-timer__blocks {% if section.settings.animate_timer_blocks %}animate-container-cards-scroll{% endif %}"
    >
      <div class="countdown-timer__block">
        <div id="countdown-timer-days-{{ section.id }}" class="countdown-timer__value heading--xl">00</div>
        <div class="countdown-timer__label body--uppercase">
          {{ section.settings.days_label | default: 'Days' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div id="countdown-timer-hours-{{ section.id }}" class="countdown-timer__value heading--xl">00</div>
        <div class="countdown-timer__label body--uppercase">
          {{ section.settings.hours_label | default: 'Hours' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div id="countdown-timer-minutes-{{ section.id }}" class="countdown-timer__value heading--xl">00</div>
        <div class="countdown-timer__label body--uppercase">
          {{ section.settings.minutes_label | default: 'Minutes' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div id="countdown-timer-seconds-{{ section.id }}" class="countdown-timer__value heading--xl">00</div>
        <div class="countdown-timer__label body--uppercase">
          {{ section.settings.seconds_label | default: 'Seconds' }}
        </div>
      </div>
    </div>

    <div
      id="countdown-timer-final-{{ section.id }}"
      class="countdown-timer__final-message countdown-timer__message heading--xl {% if section.settings.final_message_animation != 'none' %}{{ section.settings.final_message_animation }}{% endif %}"
    >
      {{ section.settings.final_message | default: 'Final hours! Do not miss out!' }}
    </div>

    <div
      id="countdown-timer-complete-{{ section.id }}"
      class="countdown-timer__complete-message countdown-timer__message heading--xl {% if section.settings.complete_message_animation != 'none' %}{{ section.settings.complete_message_animation }}{% endif %}"
    >
      {{ section.settings.complete_message | default: 'The countdown has ended!' }}
    </div>

    {% if section.settings.button_label != blank and section.settings.button_link != blank %}
      <div class="countdown-timer__button-container body">
        <a
          href="{{ section.settings.button_link }}"
          class="button button--white body"
        >
          {{ section.settings.button_label }}
        </a>
      </div>
    {% endif %}
  </div>
</div>

<script>
  (function() {
    const sectionId = "{{ section.id }}";
    const targetDateStr = "{{ section.settings.target_date }}";
    const finalHoursThreshold = {{ section.settings.final_hours_threshold | default: 3 }};

    const daysElement = document.getElementById("countdown-timer-days-" + sectionId);
    const hoursElement = document.getElementById("countdown-timer-hours-" + sectionId);
    const minutesElement = document.getElementById("countdown-timer-minutes-" + sectionId);
    const secondsElement = document.getElementById("countdown-timer-seconds-" + sectionId);
    const blocksElement = document.getElementById("countdown-timer-blocks-" + sectionId);
    const finalMessageElement = document.getElementById("countdown-timer-final-" + sectionId);
    const completeMessageElement = document.getElementById("countdown-timer-complete-" + sectionId);

    function getMelbourneTime() {
      const [datePart, timePart] = targetDateStr.split('T');
      const [year, month, day] = datePart.split('-').map(Number);
      const [hours, minutes, seconds] = timePart.split(':').map(Number);
      const dateObj = new Date(year, month - 1, day, hours, minutes, seconds);
      const melbourne = new Date(dateObj);
      const localTimezoneOffset = dateObj.getTimezoneOffset();
      const melbourneTimezoneOffset = -600;
      const offsetDiff = melbourneTimezoneOffset - localTimezoneOffset;
      melbourne.setMinutes(melbourne.getMinutes() + offsetDiff);

      return melbourne.getTime();
    }

    const targetDate = getMelbourneTime();

    function updateTimer() {
      const now = new Date().getTime();
      const distance = targetDate - now;

      if (distance <= 0) {
        daysElement.textContent = "00";
        hoursElement.textContent = "00";
        minutesElement.textContent = "00";
        secondsElement.textContent = "00";

        blocksElement.style.display = "none";
        finalMessageElement.style.display = "none";
        completeMessageElement.style.display = "block";
        return;
      }

      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      daysElement.textContent = String(days).padStart(2, '0');
      hoursElement.textContent = String(hours).padStart(2, '0');
      minutesElement.textContent = String(minutes).padStart(2, '0');
      secondsElement.textContent = String(seconds).padStart(2, '0');

      if (distance <= (finalHoursThreshold * 60 * 60 * 1000)) {
        blocksElement.style.display = "none";
        finalMessageElement.style.display = "block";
        completeMessageElement.style.display = "none";
      } else {
        blocksElement.style.display = "flex";
        finalMessageElement.style.display = "none";
        completeMessageElement.style.display = "none";
      }

      requestAnimationFrame(updateTimer);
    }

    if (targetDate) {
      updateTimer();
    }
  })();
</script>

{% schema %}
{
  "name": "Hero Countdown Timer",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Countdown Settings"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Limited Time Offer"
    },
    {
      "type": "select",
      "id": "heading_animation",
      "label": "Heading Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "animate-word-slide-up-scroll",
          "label": "Slide Up Words"
        },
        {
          "value": "animate-word-rotate-scroll",
          "label": "Rotate In Words"
        },
        {
          "value": "animate-paragraph-slide-up-scroll",
          "label": "Slide Up"
        }
      ],
      "default": "none"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Do not miss out on this special offer!"
    },
    {
      "type": "select",
      "id": "subheading_animation",
      "label": "Subheading Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "animate-word-slide-up-scroll",
          "label": "Slide Up Words"
        },
        {
          "value": "animate-word-rotate-scroll",
          "label": "Rotate In Words"
        },
        {
          "value": "animate-paragraph-slide-up-scroll",
          "label": "Slide Up"
        }
      ],
      "default": "none"
    },
    {
      "type": "text",
      "id": "target_date",
      "label": "Target Date and Time (Melbourne)",
      "default": "2025-12-31T23:59:59",
      "info": "Enter date in format: YYYY-MM-DDTHH:MM:SS (e.g., 2025-12-31T23:59:59)"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "horizontal_alignment",
      "label": "Horizontal Alignment",
      "default": "center",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "select",
      "id": "vertical_alignment",
      "label": "Vertical Alignment",
      "default": "bottom",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "middle",
          "label": "Middle"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        }
      ]
    },
    {
      "type": "header",
      "content": "Animation Settings"
    },
    {
      "type": "checkbox",
      "id": "animate_timer_blocks",
      "label": "Animate Timer Blocks",
      "default": false,
      "info": "Adds a staggered animation to the timer blocks as they scroll into view"
    },
    {
      "type": "header",
      "content": "Timer Labels"
    },
    {
      "type": "text",
      "id": "days_label",
      "label": "Days Label",
      "default": "Days"
    },
    {
      "type": "text",
      "id": "hours_label",
      "label": "Hours Label",
      "default": "Hours"
    },
    {
      "type": "text",
      "id": "minutes_label",
      "label": "Minutes Label",
      "default": "Minutes"
    },
    {
      "type": "text",
      "id": "seconds_label",
      "label": "Seconds Label",
      "default": "Seconds"
    },
    {
      "type": "header",
      "content": "Messages"
    },
    {
      "type": "range",
      "id": "final_hours_threshold",
      "min": 1,
      "max": 48,
      "step": 1,
      "default": 3,
      "label": "Final Hours Threshold (hours)",
      "info": "Show the final hours message when this many hours remain"
    },
    {
      "type": "text",
      "id": "final_message",
      "label": "Final Hours Message",
      "default": "Final hours! Do not miss out!"
    },
    {
      "type": "select",
      "id": "final_message_animation",
      "label": "Final Message Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "animate-word-slide-up-scroll",
          "label": "Slide Up Words"
        },
        {
          "value": "animate-word-rotate-scroll",
          "label": "Rotate In Words"
        },
        {
          "value": "animate-paragraph-slide-up-scroll",
          "label": "Slide Up"
        }
      ],
      "default": "none"
    },
    {
      "type": "text",
      "id": "complete_message",
      "label": "Completion Message",
      "default": "The countdown has ended!"
    },
    {
      "type": "select",
      "id": "complete_message_animation",
      "label": "Complete Message Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "animate-word-slide-up-scroll",
          "label": "Slide Up Words"
        },
        {
          "value": "animate-word-rotate-scroll",
          "label": "Rotate In Words"
        },
        {
          "value": "animate-paragraph-slide-up-scroll",
          "label": "Slide Up"
        }
      ],
      "default": "none"
    },
    {
      "type": "header",
      "content": "Button (Optional)"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    }
  ],
  "presets": [
    {
      "name": "Hero Countdown Timer",
      "category": "Hero"
    }
  ]
}
{% endschema %}
