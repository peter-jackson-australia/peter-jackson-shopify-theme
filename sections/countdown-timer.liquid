<style>
  .countdown-timer {
    position: relative;
    padding: var(--space-xl) var(--space-m);
    text-align: center;
    background-color: var(--white);
  }

  .countdown-timer__container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .countdown-timer__heading {
    margin-bottom: var(--space-m);
  }

  .countdown-timer__blocks {
    display: flex;
    justify-content: center;
    gap: var(--space-m);
    margin: var(--space-l) 0;
  }

  .countdown-timer__block {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
  }

  .countdown-timer__value {
    display: inline-block;
    width: 100%;
    padding: var(--space-s);
    background-color: var(--neutral-950);
    color: var(--white);
    border-radius: 4px;
    margin-bottom: var(--space-xs);
    font-family: 'Ordinary Regular', sans-serif;
    font-weight: 500;
    font-size: clamp(1.5rem, 1.425rem + 0.375vw, 1.875rem);
    line-height: 1;
  }

  .countdown-timer__label {
    font-family: 'Ordinary Light', sans-serif;
    text-transform: uppercase;
    font-size: clamp(0.6944rem, 0.6597rem + 0.1736vw, 0.8681rem);
    color: var(--neutral-600);
    letter-spacing: 0.065rem;
  }

  .countdown-timer__message {
    margin-top: var(--space-l);
  }

  .countdown-timer__final-message,
  .countdown-timer__complete-message {
    display: none;
  }

  /* Mobile styles */
  @media screen and (max-width: 768px) {
    .countdown-timer__blocks {
      gap: var(--space-s);
    }

    .countdown-timer__block {
      min-width: 60px;
    }

    .countdown-timer__value {
      font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
    }

    .countdown-timer__label {
      font-size: 12px;
    }
  }
</style>

<div
  id="countdown-timer-{{ section.id }}"
  class="countdown-timer"
  style="
    background-color: {{ section.settings.background_color }};
    color: {{ section.settings.text_color }};
  "
  {% if section.settings.section_id != blank %}
    id="{{ section.settings.section_id }}"
  {% endif %}
>
  <div class="countdown-timer__container">
    {% if section.settings.heading != blank %}
      <h2 class="countdown-timer__heading heading--2xl" style="color: {{ section.settings.text_color }};">
        {{ section.settings.heading }}
      </h2>
    {% endif %}

    {% if section.settings.subheading != blank %}
      <div class="countdown-timer__subheading body" style="color: {{ section.settings.text_color }};">
        {{ section.settings.subheading }}
      </div>
    {% endif %}

    <div id="countdown-timer-blocks-{{ section.id }}" class="countdown-timer__blocks">
      <div class="countdown-timer__block">
        <div
          id="countdown-timer-days-{{ section.id }}"
          class="countdown-timer__value"
          style="background-color: {{ section.settings.block_color }};"
        >
          00
        </div>
        <div class="countdown-timer__label" style="color: {{ section.settings.label_color }};">
          {{ section.settings.days_label | default: 'Days' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div
          id="countdown-timer-hours-{{ section.id }}"
          class="countdown-timer__value"
          style="background-color: {{ section.settings.block_color }};"
        >
          00
        </div>
        <div class="countdown-timer__label" style="color: {{ section.settings.label_color }};">
          {{ section.settings.hours_label | default: 'Hours' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div
          id="countdown-timer-minutes-{{ section.id }}"
          class="countdown-timer__value"
          style="background-color: {{ section.settings.block_color }};"
        >
          00
        </div>
        <div class="countdown-timer__label" style="color: {{ section.settings.label_color }};">
          {{ section.settings.minutes_label | default: 'Minutes' }}
        </div>
      </div>

      <div class="countdown-timer__block">
        <div
          id="countdown-timer-seconds-{{ section.id }}"
          class="countdown-timer__value"
          style="background-color: {{ section.settings.block_color }};"
        >
          00
        </div>
        <div class="countdown-timer__label" style="color: {{ section.settings.label_color }};">
          {{ section.settings.seconds_label | default: 'Seconds' }}
        </div>
      </div>
    </div>

    <div
      id="countdown-timer-final-{{ section.id }}"
      class="countdown-timer__final-message countdown-timer__message heading--xl"
      style="color: {{ section.settings.text_color }};"
    >
      {{ section.settings.final_message | default: 'Final hours! Do not miss out!' }}
    </div>

    <div
      id="countdown-timer-complete-{{ section.id }}"
      class="countdown-timer__complete-message countdown-timer__message heading--xl"
      style="color: {{ section.settings.text_color }};"
    >
      {{ section.settings.complete_message | default: 'The countdown has ended!' }}
    </div>

    {% if section.settings.button_label != blank and section.settings.button_link != blank %}
      <div class="countdown-timer__button-container" style="margin-top: var(--space-l);">
        <a
          href="{{ section.settings.button_link }}"
          class="button"
          style="
            background-color: {{ section.settings.button_background }};
            color: {{ section.settings.button_text_color }};
            border: 1px solid {{ section.settings.button_border_color }};
          "
        >
          {{ section.settings.button_label }}
        </a>
      </div>
    {% endif %}
  </div>
</div>

<script>
  (function() {
    const sectionId = "{{ section.id }}";
    const targetDate = new Date("{{ section.settings.target_date }}").getTime();
    const finalHoursThreshold = {{ section.settings.final_hours_threshold | default: 3 }};

    const daysElement = document.getElementById("countdown-timer-days-" + sectionId);
    const hoursElement = document.getElementById("countdown-timer-hours-" + sectionId);
    const minutesElement = document.getElementById("countdown-timer-minutes-" + sectionId);
    const secondsElement = document.getElementById("countdown-timer-seconds-" + sectionId);
    const blocksElement = document.getElementById("countdown-timer-blocks-" + sectionId);
    const finalMessageElement = document.getElementById("countdown-timer-final-" + sectionId);
    const completeMessageElement = document.getElementById("countdown-timer-complete-" + sectionId);

    function updateTimer() {
      const now = new Date().getTime();
      const distance = targetDate - now;

      if (distance <= 0) {
        // Countdown completed
        daysElement.textContent = "00";
        hoursElement.textContent = "00";
        minutesElement.textContent = "00";
        secondsElement.textContent = "00";

        blocksElement.style.display = "none";
        finalMessageElement.style.display = "none";
        completeMessageElement.style.display = "block";
        return;
      }

      // Calculate time units
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      // Update the display
      daysElement.textContent = String(days).padStart(2, '0');
      hoursElement.textContent = String(hours).padStart(2, '0');
      minutesElement.textContent = String(minutes).padStart(2, '0');
      secondsElement.textContent = String(seconds).padStart(2, '0');

      // Check if we're in the final hours
      if (distance <= (finalHoursThreshold * 60 * 60 * 1000)) {
        blocksElement.style.display = "none";
        finalMessageElement.style.display = "block";
        completeMessageElement.style.display = "none";
      } else {
        blocksElement.style.display = "flex";
        finalMessageElement.style.display = "none";
        completeMessageElement.style.display = "none";
      }

      // Continue updating
      requestAnimationFrame(updateTimer);
    }

    // Start the countdown
    if (targetDate) {
      updateTimer();
    }
  })();
</script>

{% schema %}
{
  "name": "Countdown Timer",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Countdown Settings"
    },
    {
      "type": "text",
      "id": "section_id",
      "label": "Section ID (Optional)",
      "info": "Custom ID for this section, useful for CSS or JavaScript targeting"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Limited Time Offer"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Don't miss out on this special offer!"
    },
    {
      "type": "text",
      "id": "target_date",
      "label": "Target Date and Time",
      "default": "2025-12-31T23:59:59",
      "info": "Enter date in format: YYYY-MM-DDTHH:MM:SS (e.g., 2025-12-31T23:59:59)"
    },
    {
      "type": "header",
      "content": "Timer Labels"
    },
    {
      "type": "text",
      "id": "days_label",
      "label": "Days Label",
      "default": "Days"
    },
    {
      "type": "text",
      "id": "hours_label",
      "label": "Hours Label",
      "default": "Hours"
    },
    {
      "type": "text",
      "id": "minutes_label",
      "label": "Minutes Label",
      "default": "Minutes"
    },
    {
      "type": "text",
      "id": "seconds_label",
      "label": "Seconds Label",
      "default": "Seconds"
    },
    {
      "type": "header",
      "content": "Messages"
    },
    {
      "type": "range",
      "id": "final_hours_threshold",
      "min": 1,
      "max": 48,
      "step": 1,
      "default": 3,
      "label": "Final Hours Threshold (hours)",
      "info": "Show the final hours message when this many hours remain"
    },
    {
      "type": "text",
      "id": "final_message",
      "label": "Final Hours Message",
      "default": "Final hours! Do not miss out!"
    },
    {
      "type": "text",
      "id": "complete_message",
      "label": "Completion Message",
      "default": "The countdown has ended!"
    },
    {
      "type": "header",
      "content": "Button (Optional)"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "header",
      "content": "Styling"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#0f0f0f"
    },
    {
      "type": "color",
      "id": "block_color",
      "label": "Timer Block Color",
      "default": "#0f0f0f"
    },
    {
      "type": "color",
      "id": "label_color",
      "label": "Timer Label Color",
      "default": "#616161"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button Background Color",
      "default": "#0f0f0f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button Border Color",
      "default": "#0f0f0f"
    }
  ],
  "presets": [
    {
      "name": "Countdown Timer",
      "category": "Promotional"
    }
  ]
}
{% endschema %}
