{{ 'leaflet.css' | asset_url | stylesheet_tag }}
<script src="{{ 'leaflet.min.js' | asset_url }}" defer></script>

<!--
  TODO:

  Map on left, location cards on right
  Search function for locations
  State dropdown

  Location cards/markers:
  Open or not indicator
  Store title
  address as clickable link to google maps
  email | phone (both links with phone formatted as XX XXXX XXXX)
  Open today (show todays hours)
  Store Information (link to store landing page)

  Show VIC states by default (as we can only access 50 location metaobjects at a time without pagination)
-->

<style>
  #map {
    height: 700px;
    filter: grayscale(100%);
  }
</style>

<div class="store-locator">
  <h2>Store Locations</h2>

  <div id="map"></div>

  {% for location in metaobjects.locations.values %}
    <div class="location-item">
      <h3>{{ location.location_name.value }}</h3>
      <p>Email: {{ location.email_address.value }}</p>
      <p>Phone: {{ location.phone_number.value }}</p>
      <p>Hours: {{ location.opening_hours.value }}</p>
      <p>Latitude: {{ location.latitude.value }}</p>
      <p>Longitude: {{ location.longitude.value }}</p>
    </div>
  {% endfor %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize map centered on Australia
  var map = L.map('map').setView([-25.2744, 133.7751], 5);

  // Add black and white tile layer
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: 'Â© OpenStreetMap contributors',
    maxZoom: 18
  }).addTo(map);

  // Create custom icon
  var storeIcon = L.icon({
    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',
    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
    iconSize: [25, 41],
    iconAnchor: [12, 41],
    popupAnchor: [1, -34],
    shadowSize: [41, 41]
  });

  // Add markers for each location
  {% for location in metaobjects.locations.values %}
    {% if location.latitude.value and location.longitude.value %}
      L.marker([{{ location.latitude.value }}, {{ location.longitude.value }}], {icon: storeIcon})
        .addTo(map)
        .bindPopup(`
          <strong>{{ location.location_name.value }}</strong><br>
          Email: {{ location.email_address.value }}<br>
          Phone: {{ location.phone_number.value }}<br>
          Hours: {{ location.opening_hours.value }}
        `);
    {% endif %}
  {% endfor %}
});
</script>

{% schema %}
{
  "name": "Store Locator",
  "tag": "section",
  "class": "section",
  "settings": [],
  "presets": [
    {
      "name": "Store Locator"
    }
  ]
}
{% endschema %}
