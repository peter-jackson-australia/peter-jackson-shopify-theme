{% comment %}
  Cart Debugging Tool
  Insert this at the bottom of your theme.liquid file before the closing body tag
{% endcomment %}

<div
  id="cart-debug-tool"
  style="position: fixed; bottom: 0; right: 0; background: white; border: 1px solid #ccc; padding: 15px; max-width: 400px; max-height: 400px; overflow: auto; z-index: 9999; font-family: monospace; font-size: 12px;"
>
  <h3>Cart Debug Tool</h3>
  <button onclick="document.getElementById('cart-debug-tool').style.display = 'none'">Close</button>
  <button onclick="refreshCartDebug()">Refresh</button>
  <button onclick="clearScrollLock()">Clear Scroll Lock</button>
  <hr>
  <div id="cart-debug-content"></div>
</div>

<script>
  // Add a keyboard shortcut (Ctrl+Shift+C) to toggle debug panel

  // Function to refresh cart debug info
  function refreshCartDebug() {
    const content = document.getElementById('cart-debug-content');

    // Clear current content
    content.innerHTML = '<div>Loading cart data...</div>';

    // Get cart data via AJAX
    fetch('/cart.js')
      .then((response) => response.json())
      .then((cart) => {
        let html = `
            <div><strong>Cart ID:</strong> ${cart.token}</div>
            <div><strong>Item Count:</strong> ${cart.item_count}</div>
            <div><strong>Total Price:</strong> ${formatMoney(cart.total_price)}</div>
            <div><strong>Body Classes:</strong> ${document.body.className}</div>
            <div><strong>Scroll Lock:</strong> ${document.body.style.overflow}</div>
            <hr>
            <h4>Items (${cart.items.length}):</h4>
          `;

        if (cart.items.length === 0) {
          html += '<div>No items in cart</div>';
        } else {
          cart.items.forEach((item, index) => {
            html += `
                <div style="margin-bottom: 10px; border-bottom: 1px dotted #ccc; padding-bottom: 5px;">
                  <div><strong>#${index + 1} - ${item.title}</strong></div>
                  <div>Key: ${item.key}</div>
                  <div>ID: ${item.id}</div>
                  <div>Variant ID: ${item.variant_id}</div>
                  <div>Quantity: ${item.quantity}</div>
                  <div>Price: ${formatMoney(item.price)}</div>
                </div>
              `;
          });
        }

        html += `
            <hr>
            <h4>Cart Notes:</h4>
            <div>${cart.note || 'No cart notes'}</div>
            <h4>Cart Attributes:</h4>
            <pre>${JSON.stringify(cart.attributes || {}, null, 2)}</pre>
          `;

        content.innerHTML = html;
      })
      .catch((error) => {
        content.innerHTML = `<div>Error fetching cart: ${error.message}</div>`;
      });
  }

  // Function to clear any scroll locks on the body
  function clearScrollLock() {
    document.body.style.overflow = '';
    document.body.classList.remove('cart-drawer-open', 'menu-open', 'js-show-ajax-cart');
    document.getElementById('cart-debug-content').innerHTML += '<div>âœ… Body scroll lock cleared</div>';
  }

  // Helper function to format money values
  function formatMoney(cents) {
    return '$' + (cents / 100).toFixed(2);
  }
</script>
