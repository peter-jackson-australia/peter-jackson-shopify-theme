{% comment %}
  Mega Menu Sidebar Drawer Component
{% endcomment %}

<style>
  [x-cloak] {
    display: none !important;
  }

  .menu-drawer__container {
    position: relative;
    z-index: 9997;
  }

  .menu-drawer__overlay {
    position: fixed;
    top: var(--space-xl);
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9998;
  }

  .menu-drawer {
    position: fixed;
    top: var(--space-xl);
    bottom: 0;
    background: var(--white);
    overflow-x: hidden;
    z-index: 9999;
    border-top: 1px solid var(--neutral-200);
  }

  .menu-drawer__inner {
    display: flex;
    height: 100%;
  }

  .menu-drawer__level {
    width: 400px;
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    display: none;
  }

  .menu-drawer__level.active {
    display: block;
  }

  .menu-drawer__header {
    display: flex;
    align-items: center;
    padding: var(--space-m) var(--space-m);
    border-bottom: 1px solid var(--neutral-200);
  }

  .menu-drawer__header .menu-drawer__heading {
    flex-grow: 1;
  }

  .menu-drawer__heading-journal {
    padding: var(--space-m) var(--space-m) 0 var(--space-m);
  }

  .menu-drawer__menu {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
    padding: var(--space-m) var(--space-m);
  }

  #menu-drawer__menu-1 {
    border-bottom: 1px solid var(--neutral-200);
  }

  #menu-drawer-level-2 {
    overflow-x: hidden !important;
    overflow-y: auto !important;
  }

  #menu-drawer-level-2::-webkit-scrollbar-horizontal {
    display: none !important;
  }

  #menu-drawer-level-2 > .menu-drawer__menu {
    border-top: 1px solid var(--neutral-200);
    border-bottom: 1px solid var(--neutral-200);
  }

  #menu-drawer-level-2 > div > .splide {
    padding: var(--space-m) var(--space-m);
    position: relative;
  }

  .menu-drawer__article {
    padding: 0;
    width: 100%;
  }

  .splide__slide {
    height: auto;
  }

  #menu-drawer-level-2,
  #menu-drawer-level-3 {
    border-left: 1px solid var(--neutral-200);
  }

  .menu-drawer__link,
  .menu-drawer__button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    text-decoration: none;
    border: none;
    background: none;
    color: inherit;
    cursor: pointer;
  }

  .menu-drawer__back {
    display: flex;
    align-items: center;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
  }

  .menu-drawer__back > :first-child {
    margin-right: var(--space-xs);
    margin-top: -2px;
  }

  body.menu-open {
    overflow: hidden;
  }

  .menu-drawer__featured-image {
    width: 100%;
    position: relative;
    overflow: hidden;
    will-change: transform;
    padding: var(--space-m) var(--space-m);
  }

  .menu-drawer__featured-image img {
    width: 100%;
    height: 400px;
    min-height: 350px;
    object-fit: cover;
    transform: translateZ(0);
  }

  .menu-drawer__featured-image.loading-new-image img {
    display: none;
  }

  .menu-drawer__video-container {
    width: 100%;
    padding: var(--space-m) var(--space-m);
    border-bottom: 1px solid var(--neutral-200);
  }

  .menu-drawer__video {
    width: 100%;
    max-height: 300px;
    object-fit: cover;
    margin-bottom: var(--space-2xs);
    min-height: 250px;
  }

  .menu-drawer__item--inactive,
  .menu-drawer__media--inactive {
    opacity: 0.4;
  }

  .menu-drawer__item--active {
    opacity: 1;
    text-decoration: underline;
    font-weight: 500;
  }

  li:has(.menu-drawer__item--active) a,
  li:has(.menu-drawer__item--active) button > span:first-child {
    text-decoration: underline;
    font-weight: 500;
  }

  #menu-drawer-level-1 {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .menu-drawer__scrollable-content {
    flex: 1;
    overflow-y: auto;
  }

  .menu-drawer__klaviyo {
    padding: var(--space-m) var(--space-m);
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    margin-top: auto;
    border-top: 1px solid var(--neutral-200);
  }

  .menu-drawer__klaviyo > .klaviyo-form > div > form,
  .menu-drawer__klaviyo > .klaviyo-form > div > form > div > div > div {
    padding: 0px !important;
  }

  .menu-drawer__klaviyo > .klaviyo-form > div > form > div {
    gap: var(--space-xs);
  }

  .menu-drawer__klaviyo > .klaviyo-form > div > form > div > div > div > div > input {
    padding: 0px !important;
    border: none !important;
    border-bottom: 1px solid var(--neutral-200) !important;
    color: var(--neutral-950);
  }

  .menu-drawer__article-content > img {
    height: 250px;
    width: 100%;
    object-fit: cover;
  }

  .menu-drawer__article-link {
    color: var(--neutral-950);
    text-decoration: none;
  }

  .menu-drawer__article-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .menu-drawer__back {
    display: none;
  }

  #menu-drawer-level-2 > div > div > .splide__track {
    overflow: visible;
  }

  .splide__slide .menu-drawer__article-image {
    filter: grayscale(100%);
    transition: filter 0.3s ease;
  }

  .splide__slide.is-active .menu-drawer__article-image {
    filter: grayscale(0%);
  }

  .menu-drawer__article-title,
  .menu-drawer__article-tag {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }

  @media screen and (min-width: 1200px) {
    #menu-drawer-level-2 > div > div > .splide__track > .splide__list > .splide__slide {
      width: 80% !important;
    }
  }

  @media screen and (max-width: 1200px) {
    #menu-drawer-level-2 > div > div > .splide__track {
      overflow: hidden;
    }

    .splide__slide .menu-drawer__article-image {
      filter: grayscale(0%);
    }

    .menu-drawer {
      width: 100%;
    }

    .menu-drawer__inner {
      display: block;
      position: relative;
      height: 100%;
    }

    .menu-drawer__level {
      width: 100vw;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      display: none;
    }

    #menu-drawer-level-1 {
      position: relative;
      display: block;
    }

    .menu-drawer__level.active {
      display: block;
      z-index: 10;
    }

    #menu-drawer-level-2,
    #menu-drawer-level-3 {
      border-left: none;
    }

    .menu-drawer__level {
      background: var(--white);
    }

    .menu-drawer__heading {
      text-align: right;
    }

    .menu-drawer__back {
      display: block;
    }

    .menu-drawer__featured-image img {
      height: 100%;
    }

    .menu-drawer__video {
      max-height: 400px;
    }
  }
</style>

<aside
  x-data="menuDrawer"
  x-init="init()"
  @keydown.escape.window="closeMenu()"
  class="menu-drawer__container"
  aria-label="Main menu"
>
  <div
    x-show="isOpen"
    class="menu-drawer__overlay"
    @click="closeMenu()"
    role="button"
    aria-label="Close menu"
    tabindex="-1"
  ></div>
  <nav x-show="isOpen" x-cloak :data-active-level="currentLevel" class="menu-drawer">
    <div class="menu-drawer__inner">
      <!-- Menu Level 1 -->
      <section
        :class="{'menu-drawer__level': true, 'active': currentLevel >= 1}"
        id="menu-drawer-level-1"
        class="custom-scrollbar"
      >
        <!-- Scrollable Content Container -->
        <div class="menu-drawer__scrollable-content custom-scrollbar">
          <!-- Menu Level 1 Links -->
          <ul class="menu-drawer__menu" role="menu" id="menu-drawer__menu-1">
            {% for link in linklists['main-menu'].links %}
              <li
                role="none"
                :class="{ 'menu-drawer__item--active': currentLevel >= 2 && {{ forloop.index0 }} === activeLevel1Index }"
              >
                {% if link.links.size > 0 %}
                  <button
                    @click="openLevel(2, '{{ link.title }}', {{ forloop.index0 }}, '{{ link.object.featured_image | image_url: width: 1200 }}', '{{ link.object.featured_image.alt }}')"
                    class="menu-drawer__button menu-drawer__button--has-submenu body--uppercase"
                    role="menuitem"
                    aria-haspopup="true"
                    aria-expanded="false"
                  >
                    <span :class="{ 'menu-drawer__item--inactive': currentLevel >= 2 && {{ forloop.index0 }} !== activeLevel1Index }">
                      {{- link.title -}}
                    </span>
                    <span :class="{ 'menu-drawer__item--inactive': currentLevel >= 2 && {{ forloop.index0 }} !== activeLevel1Index }">
                      {% render 'icon-arrow-see-more' %}
                    </span>
                  </button>
                {% else %}
                  <a
                    href="{{ link.url }}"
                    class="menu-drawer__link body--uppercase"
                    :class="{ 'menu-drawer__item--inactive': currentLevel >= 2 }"
                    role="menuitem"
                  >
                    {{ link.title }}
                  </a>
                {% endif %}
              </li>
            {% endfor %}
          </ul>
          <!-- Menu Level 1 Video -->
          <div class="menu-drawer__video-container">
            <video
              class="menu-drawer__video"
              :class="{'menu-drawer__media--inactive': currentLevel >= 2}"
              x-ref="menuVideo"
              x-init="$watch('isOpen', value => {if (value && $refs.menuVideo) {$refs.menuVideo.play().catch(e => console.log('Autoplay prevented:', e));} else if ($refs.menuVideo) {$refs.menuVideo.pause();}})"
              muted
              loop
              playsinline
              preload="metadata"
              aria-hidden="true"
            >
              <source src="https://cdn.shopify.com/videos/c/o/v/ccff09333a4c451588e9b1a091de9d04.mp4" type="video/mp4">
            </video>
            <p class="body" :class="{'menu-drawer__media--inactive': currentLevel >= 2}">Winter 25 Collection</p>
          </div>
          <!-- Menu Level 1 Secondary Links -->
          <ul class="menu-drawer__menu" id="menu-drawer__menu-1-secondary" role="menu">
            {% for link in linklists['secondary-main-menu'].links %}
              <li role="none">
                <a
                  href="{{ link.url }}"
                  class="menu-drawer__link body--uppercase"
                  :class="{'menu-drawer__item--inactive': currentLevel >= 2}"
                  role="menuitem"
                >
                  {{ link.title }}
                </a>
              </li>
            {% endfor %}
          </ul>
        </div>

        <!-- Menu Level 1 Newsletter Form (Fixed at bottom) -->
        <div class="menu-drawer__klaviyo">
          <h2 class="menu-drawer__klaviyo__header body--uppercase">JOIN THE JACKSON CLUB</h2>
          <div class="klaviyo-form-WH7CVh"></div>
          <p class="small">By signing up, you agree to our terms and conditions.</p>
        </div>
      </section>

      <!-- Menu Level 2 -->
      <section
        class="custom-scrollbar"
        :class="{'menu-drawer__level': true, 'active': currentLevel >= 2}"
        id="menu-drawer-level-2"
        aria-labelledby="menu-drawer-heading-2"
      >
        <header class="menu-drawer__header">
          <button @click="backLevel()" class="menu-drawer__back" aria-label="Back to previous menu">
            <span :class="{'menu-drawer__media--inactive': currentLevel >= 3}">{% render 'icon-arrow-see-less' %}</span>
            <span class="body--uppercase" :class="{'menu-drawer__media--inactive': currentLevel >= 3}">Back</span>
          </button>
          <h2
            class="menu-drawer__heading body--uppercase"
            id="menu-drawer-heading-2"
            :class="{'menu-drawer__media--inactive': currentLevel >= 3}"
            x-text="decodeEntities(menuTitle)"
          ></h2>
        </header>
        <!-- Menu Level 2 Featured Image -->
        <figure class="menu-drawer__featured-image" :class="{'loading-new-image': isImageLoading}">
          <img
            :src="featuredImageUrl || '#'"
            :alt="featuredImageAlt"
            :srcset="generateSrcset(featuredImageUrl)"
            :class="{'menu-drawer__media--inactive': currentLevel >= 3}"
            loading="eager"
            @load="imageLoaded = true; isImageLoading = false;"
            height="100"
            width="100"
          >
        </figure>
        <!-- Menu Level 2 Links -->
        <ul class="menu-drawer__menu" role="menu">
          <template x-for="(item, childIndex) in submenu" :key="childIndex">
            <li
              role="none"
              :class="{'menu-drawer__item--active': currentLevel >= 3 && childIndex === activeLevel2Index}"
            >
              <template x-if="item.links && item.links.length > 0">
                <button
                  @click="openLevel(3, item.title, currentParentIndex, null, null, childIndex)"
                  class="menu-drawer__button menu-drawer__button--has-submenu body--uppercase"
                  role="menuitem"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  <span
                    :class="{'menu-drawer__item--inactive': currentLevel >= 3 && childIndex !== activeLevel2Index}"
                    x-text="decodeEntities(item.title)"
                  ></span>
                  <span :class="{'menu-drawer__item--inactive': currentLevel >= 3 && childIndex !== activeLevel2Index}">
                    {% render 'icon-arrow-see-more' %}
                  </span>
                </button>
              </template>
              <template x-if="!item.links || item.links.length === 0">
                <a
                  :href="item.url"
                  class="menu-drawer__link body--uppercase"
                  :class="{'menu-drawer__item--inactive': currentLevel >= 3}"
                  role="menuitem"
                  x-text="decodeEntities(item.title)"
                ></a>
              </template>
            </li>
          </template>
        </ul>

        <template x-if="filteredArticles && filteredArticles.length > 0">
          <div :class="{'menu-drawer__media--inactive': currentLevel >= 3}">
            <h2 class="menu-drawer__heading-journal body--uppercase">The Jackson Journal</h2>
            <div class="splide" x-ref="splideSlider">
              <div class="splide__track">
                <ul class="splide__list">
                  <!-- Slides will be inserted here by refreshSliderContent() -->
                </ul>
              </div>
            </div>
          </div>
        </template>
      </section>

      <!-- Menu Level 3 -->
      <section
        :class="{'menu-drawer__level': true, 'active': currentLevel >= 3}"
        id="menu-drawer-level-3"
        aria-labelledby="menu-drawer-heading-3"
      >
        <header class="menu-drawer__header">
          <button @click="backLevel()" class="menu-drawer__back" aria-label="Back to previous menu">
            {% render 'icon-arrow-see-less' %}
            <span class="body--uppercase">Back</span>
          </button>
          <h2
            class="menu-drawer__heading body--uppercase"
            id="menu-drawer-heading-3"
            x-text="decodeEntities(subMenuTitle)"
          ></h2>
        </header>
        <ul class="menu-drawer__menu" role="menu">
          <template x-for="(item, index) in subSubmenu" :key="index">
            <li role="none">
              <a
                :href="item.url"
                class="menu-drawer__link body--uppercase"
                role="menuitem"
                x-text="decodeEntities(item.title)"
              ></a>
            </li>
          </template>
        </ul>
      </section>
    </div>
  </nav>
</aside>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('menuDrawer', () => ({
      isOpen: false,
      currentLevel: 1,
      menuTitle: '',
      subMenuTitle: '',
      submenu: [],
      subSubmenu: [],
      menuData: [],
      currentParentIndex: 0,
      featuredImageUrl: '',
      featuredImageAlt: '',
      imageLoaded: false,
      isImageLoading: false,
      activeLevel1Index: null,
      activeLevel2Index: null,
      filteredArticles: [],
      splideSlider: null,
      currentChildIndex: null,
  
      init() {
        const headerHeight = document.querySelector('header')?.offsetHeight || 60;
        document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);
  
        this.menuData = [
          {% for link in linklists['main-menu'].links %}
            {
              title: "{{ link.title | strip_html | replace: '"', '\"' | replace: "'", "\\'" }}",
              url: "{{ link.url }}",
              collectionId: "{{ link.object.id }}",
              featuredImage: "{{ link.object.featured_image | image_url: '1200x' }}",
              featuredImageAlt: "{{ link.object.featured_image.alt | strip_html | replace: '"', '\"' | replace: "'", "\\'" }}",
              links: [
                {% for childlink in link.links %}
                  {
                    title: "{{ childlink.title | strip_html | replace: '"', '\"' | replace: "'", "\\'" }}",
                    url: "{{ childlink.url }}",
                    links: [
                      {% for grandchildlink in childlink.links %}
                        {
                          title: "{{ grandchildlink.title | strip_html | replace: '"', '\"' | replace: "'", "\\'" }}",
                          url: "{{ grandchildlink.url }}"
                        }{% unless forloop.last %},{% endunless %}
                      {% endfor %}
                    ]
                  }{% unless forloop.last %},{% endunless %}
                {% endfor %}
              ]
            }{% unless forloop.last %},{% endunless %}
          {% endfor %}
        ];
  
        window.toggleNav = () => {
          this.isOpen ? this.closeMenu() : this.openMenu();
        };
      },
  
      decodeEntities(text) {
        if (!text) return '';
        const textarea = document.createElement('textarea');
        textarea.innerHTML = text;
        return textarea.value;
      },
  
      openMenu() {
        this.isOpen = true;
        this.currentLevel = 1;
        document.body.classList.add('menu-open');
        document.querySelector('.hamburger-menu').classList.add('nav-open');
      },
  
      closeMenu() {
        this.isOpen = false;
        document.body.classList.remove('menu-open');
        document.querySelector('.hamburger-menu').classList.remove('nav-open');
  
        if (this.splideSlider) {
          this.splideSlider.destroy(); 
          this.splideSlider = null; 
        }
  
        this.filteredArticles = []; 
      },
  
      refreshSliderContent() {
        const track = this.$refs.splideSlider?.querySelector('.splide__list');
        
        if (track) {
          track.innerHTML = '';
          
          this.filteredArticles.forEach(article => {
            const slideHTML = `
              <li class="splide__slide">
                <article class="menu-drawer__article">
                  <div class="menu-drawer__article-content">
                    ${article.image ? `<img src="${article.image}" alt="${article.title}" class="menu-drawer__article-image" width="100" height="100">` : ''}
                    <p class="menu-drawer__article-tag small">${article.tag}</p>
                    <header class="menu-drawer__article-header">
                      <h2 class="menu-drawer__article-title body--bold">${article.title}</h2>
                    </header>
                    <a class="menu-drawer__article-link body" href="${article.url}">Read The Article <span><svg width="12" height="10" viewBox="0 0 12 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M6.6 1L10.6 5M10.6 5L6.6 9M10.6 5L1 5" stroke="#A0A0A0" stroke-width="0.75" stroke-linecap="square"/>
                    </svg>
                    </span></a>
                  </div>
                </article>
              </li>
            `;
            
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = slideHTML.trim();
            track.appendChild(tempDiv.firstElementChild);
          });
        }
      },
  
      initSplideSlider() {
        if (this.splideSlider) {
          this.splideSlider.destroy();
          this.splideSlider = null;
        }
        
        this.$nextTick(() => {
          if (this.filteredArticles.length > 0 && window.Splide && this.$refs.splideSlider) {
            this.splideSlider = new Splide(this.$refs.splideSlider, {
              perPage: 1,
              gap: '20px',
              autoplay: false,
              type: 'loop',
              arrows: false,
              pagination: false,
              breakpoints: {
                1200: {
                  perPage: 3
                }, 
                768: {
                  perPage: 2
                }
              }
            }).mount();
          }
        });
      },
  
      openLevel(level, title, parentIndex, featuredImage, featuredImageAlt, childIndex) {
        if (level === 2 && this.activeLevel1Index === parentIndex && this.currentLevel > 1) {
          this.currentLevel = 1;
          this.activeLevel1Index = null;
          this.activeLevel2Index = null;
          this.featuredImageUrl = '';
          this.featuredImageAlt = '';
          return;
        }
        
        const isSameLevel2Item = level === 2 && this.currentLevel === 2 && this.currentParentIndex === parentIndex;
        const isSameLevel3Item = level === 3 && this.currentLevel === 3 && this.currentChildIndex === childIndex;
        
        if (isSameLevel2Item || isSameLevel3Item) {
          this.backLevel();
          return;
        }
        
        this.currentLevel = level;
  
        if (level === 2) {
          this.activeLevel1Index = parentIndex;
          this.activeLevel2Index = null;
          this.menuTitle = title;
          this.currentParentIndex = parentIndex;
          this.submenu = this.menuData[parentIndex].links;
          
          const prevUrl = this.featuredImageUrl;
          const newUrl = featuredImage || (this.menuData[parentIndex] ? this.menuData[parentIndex].featuredImage : '');
          const collectionId = this.menuData[parentIndex].collectionId;
  
          this.filteredArticles = this.getAllArticles().filter(article => 
            article.relatedIds.includes(collectionId)
          );      
  
          this.$nextTick(() => {
            this.refreshSliderContent();
            this.initSplideSlider();
          });
          
          if (prevUrl !== newUrl) {
            this.isImageLoading = true;
            this.imageLoaded = false;
  
            if (featuredImage) {
              this.featuredImageUrl = featuredImage;
              this.featuredImageAlt = featuredImageAlt || title;
            } 
            else if (this.menuData[parentIndex]) {
              this.featuredImageUrl = this.menuData[parentIndex].featuredImage;
              this.featuredImageAlt = this.menuData[parentIndex].featuredImageAlt || title;
            }
          }
        } else if (level === 3) {
          this.activeLevel2Index = childIndex;
          this.subMenuTitle = title;
          this.currentChildIndex = childIndex; 
          this.subSubmenu = this.menuData[this.currentParentIndex].links[childIndex].links;
        }
      }, 
  
      backLevel() {
        if (this.currentLevel > 1) {
          this.currentLevel--;
          
          if (this.currentLevel === 1) {
            this.featuredImageUrl = '';
            this.featuredImageAlt = '';
            this.filteredArticles = []; 
            if (this.splideSlider) {
              this.splideSlider.destroy();
              this.splideSlider = null; 
            }
          } else if (this.currentLevel === 2) {
            this.$nextTick(() => {
              this.refreshSliderContent();
              this.initSplideSlider();
            });
          }
        }
      },
  
      getAllArticles() {
        return [
          {% for article in blogs['the-jackson-journal'].articles limit: 50 %}
            {
              title: "{{ article.title | escape }}",
              image: "{{ article.image | image_url: width: '400px' }}",
              url: "{{ article.url | escape }}",
              tag: "{{ article.tags[0] | escape }}",
              relatedIds: [{% for relatedCollection in article.metafields.custom.related_collections.value %}'{{ relatedCollection.id }}',{% endfor %}]
            }{% unless forloop.last %},{% endunless %}
          {% endfor %}
        ];
      },
      
      generateSrcset(baseUrl) {
        if (!baseUrl) return '';
        
        const urlParts = baseUrl.split('_1200x');
        if (urlParts.length !== 2) return baseUrl;
        
        const baseUrlWithoutSize = urlParts[0];
        const extension = urlParts[1];
        
        return [
          `${baseUrlWithoutSize}_400x${extension} 400w`,
          `${baseUrlWithoutSize}_800x${extension} 800w`,
          `${baseUrlWithoutSize}_1200x${extension} 1200w`
        ].join(', ');
      },
    }));
  });
</script>
